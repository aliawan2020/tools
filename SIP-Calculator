<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>SIP Calculator - Multi Tool Hub</title>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <style>
    body {
      margin: 0;
      font-family: Arial, sans-serif;
      background-color: #121212;
      color: #ffffff;
      display: flex;
      flex-direction: column;
      align-items: center;
      padding: 2rem;
    }
    .calculator {
      background-color: #1e1e1e;
      border-radius: 10px;
      padding: 2rem;
      max-width: 500px;
      width: 100%;
      box-shadow: 0 0 15px rgba(0,0,0,0.5);
    }
    .calculator h2 {
      text-align: center;
      margin-bottom: 1rem;
    }
    .form-group {
      margin-bottom: 1rem;
    }
    label {
      display: block;
      margin-bottom: 0.5rem;
    }
    input[type="number"], input[type="range"] {
      width: 100%;
      padding: 0.5rem;
      border-radius: 5px;
      border: none;
    }
    .results {
      margin-top: 1.5rem;
    }
    .results p {
      margin: 0.5rem 0;
    }
    canvas {
      margin-top: 2rem;
    }
  </style>
</head>
<body>
  <div class="calculator">
    <h2>SIP Calculator</h2>
    <div class="form-group">
      <label for="monthlyInvestment">Monthly Investment Amount</label>
      <input type="number" id="monthlyInvestment" value="5000" min="0" />
    </div>
    <div class="form-group">
      <label for="annualReturn">Expected Annual Return Rate (%)</label>
      <input type="number" id="annualReturn" value="12" min="0" step="0.1" />
    </div>
    <div class="form-group">
      <label for="investmentTenure">Investment Tenure (Years)</label>
      <input type="number" id="investmentTenure" value="10" min="1" />
    </div>

    <div class="results">
      <p><strong>Total Investment:</strong> <span id="totalInvestment">0</span></p>
      <p><strong>Total Returns:</strong> <span id="totalReturns">0</span></p>
      <p><strong>Total Value at Maturity:</strong> <span id="maturityValue">0</span></p>
    </div>

    <canvas id="sipChart" width="400" height="200"></canvas>
  </div>

  <script>
    const monthlyInput = document.getElementById('monthlyInvestment');
    const returnInput = document.getElementById('annualReturn');
    const tenureInput = document.getElementById('investmentTenure');
    const totalInvestmentEl = document.getElementById('totalInvestment');
    const totalReturnsEl = document.getElementById('totalReturns');
    const maturityValueEl = document.getElementById('maturityValue');
    const ctx = document.getElementById('sipChart').getContext('2d');

    let chart;

    function calculateSIP() {
      const P = parseFloat(monthlyInput.value);
      const annualRate = parseFloat(returnInput.value);
      const years = parseInt(tenureInput.value);

      if (P <= 0 || annualRate <= 0 || years <= 0) {
        totalInvestmentEl.textContent = totalReturnsEl.textContent = maturityValueEl.textContent = 'Invalid Input';
        return;
      }

      const n = years * 12;
      const r = annualRate / 12 / 100;

      const FV = P * ((Math.pow(1 + r, n) - 1) / r) * (1 + r);
      const totalInvestment = P * n;
      const totalReturns = FV - totalInvestment;

      totalInvestmentEl.textContent = totalInvestment.toFixed(2);
      totalReturnsEl.textContent = totalReturns.toFixed(2);
      maturityValueEl.textContent = FV.toFixed(2);

      renderChart(totalInvestment, totalReturns);
    }

    function renderChart(investment, returns) {
      if (chart) chart.destroy();

      chart = new Chart(ctx, {
        type: 'doughnut',
        data: {
          labels: ['Invested Amount', 'Returns'],
          datasets: [{
            data: [investment, returns],
            backgroundColor: ['#03dac6', '#bb86fc']
          }]
        },
        options: {
          plugins: {
            legend: {
              labels: {
                color: 'white'
              }
            }
          }
        }
      });
    }

    [monthlyInput, returnInput, tenureInput].forEach(input => input.addEventListener('input', calculateSIP));

    calculateSIP(); // Initial calculation
  </script>
</body>
</html>
